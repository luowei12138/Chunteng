<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.mapper.MedicalAdviceDao">

    <resultMap type="cn.bdqn.model.MedicalAdvice" id="MedicalAdviceMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="registryId" column="registry_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="chiefComplaint" column="chief_complaint" jdbcType="VARCHAR"/>
        <result property="diagnosis" column="diagnosis" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MedicalAdviceMap">
        select
          id, registry_id, user_id, chief_complaint, diagnosis, created_time, updated_time
        from chunteng.medical_advice
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MedicalAdviceMap">
        select
          id, registry_id, user_id, chief_complaint, diagnosis, created_time, updated_time
        from chunteng.medical_advice
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MedicalAdviceMap">
        select
        id, registry_id, user_id, chief_complaint, diagnosis, created_time, updated_time
        from chunteng.medical_advice
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="registryId != null">
                and registry_id = #{registryId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="chiefComplaint != null and chiefComplaint != ''">
                and chief_complaint = #{chiefComplaint}
            </if>
            <if test="diagnosis != null and diagnosis != ''">
                and diagnosis = #{diagnosis}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
        </where>
    </select>

    <select id="queryByRegistryId" resultType="cn.bdqn.req.MedicalAdviceReq">
        select t1.id              as id,
               t1.registry_id     as registryId,
               t1.user_id         as userId,
               t1.chief_complaint as chiefComplaint,
               t1.diagnosis       as diagnosis,
               t1.created_time    as createdTime,
               t1.updated_time    as updatedTime,
               t2.user_name       as doctorName
        from medical_advice AS t1
                 LEFT JOIN sys_users AS t2 ON t1.user_id = t2.id
        where t1.registry_id = #{registryId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into chunteng.medical_advice(registry_id, user_id, chief_complaint, diagnosis, created_time, updated_time)
        values (#{registryId}, #{userId}, #{chiefComplaint}, #{diagnosis}, #{createdTime}, #{updatedTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into chunteng.medical_advice(registry_id, user_id, chief_complaint, diagnosis, created_time,
        updated_time)
        values
        <foreach collection="entities" item="model" separator=",">
            (#{model.registryId}, #{model.userId}, #{model.chiefComplaint}, #{model.diagnosis},
            #{model.createdTime}, #{model.updatedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into chunteng.medical_advice(registry_id, user_id, chief_complaint, diagnosis, created_time,
        updated_time)
        values
        <foreach collection="entities" item="model" separator=",">
            (#{model.registryId}, #{model.userId}, #{model.chiefComplaint}, #{model.diagnosis},
            #{model.createdTime}, #{model.updatedTime})
        </foreach>
        on duplicate key update
        registry_id = values(registry_id) , user_id = values(user_id) , chief_complaint = values(chief_complaint) ,
        diagnosis = values(diagnosis) , created_time = values(created_time) , updated_time = values(updated_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update chunteng.medical_advice
        <set>
            <if test="registryId != null">
                registry_id = #{registryId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="chiefComplaint != null and chiefComplaint != ''">
                chief_complaint = #{chiefComplaint},
            </if>
            <if test="diagnosis != null and diagnosis != ''">
                diagnosis = #{diagnosis},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from chunteng.medical_advice where id = #{id}
    </delete>

</mapper>

