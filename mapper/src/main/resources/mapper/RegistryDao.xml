<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.mapper.RegistryDao">

    <resultMap type="cn.bdqn.model.Registry" id="RegistryMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="patientId" column="patient_id" jdbcType="INTEGER"/>
        <result property="scheduleId" column="schedule_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
        <result property="roomId" column="room_id" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="fee" column="fee" jdbcType="NUMERIC"/>
        <result property="payFee" column="pay_fee" jdbcType="NUMERIC"/>
        <result property="medicareFee" column="medicare_fee" jdbcType="NUMERIC"/>
        <result property="isMedicare" column="is_medicare" jdbcType="INTEGER"/>
        <result property="registryTime" column="registry_time" jdbcType="TIMESTAMP"/>
        <result property="consultationTime" column="consultation_time" jdbcType="TIMESTAMP"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RegistryMap">
        select
          id, patient_id, schedule_id, user_id, department_id, room_id, status, fee, pay_fee, medicare_fee, is_medicare, registry_time, consultation_time, created_time, updated_time
        from chunteng.registry
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RegistryMap">
        select
          id, patient_id, schedule_id, user_id, department_id, room_id, status, fee, pay_fee, medicare_fee, is_medicare, registry_time, consultation_time, created_time, updated_time
        from chunteng.registry
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RegistryMap">
        select
        id, patient_id, schedule_id, user_id, department_id, room_id, status, fee, pay_fee, medicare_fee, is_medicare,
        registry_time, consultation_time, created_time, updated_time
        from chunteng.registry
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="patientId != null">
                and patient_id = #{patientId}
            </if>
            <if test="scheduleId != null">
                and schedule_id = #{scheduleId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="roomId != null">
                and room_id = #{roomId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="fee != null">
                and fee = #{fee}
            </if>
            <if test="payFee != null">
                and pay_fee = #{payFee}
            </if>
            <if test="medicareFee != null">
                and medicare_fee = #{medicareFee}
            </if>
            <if test="isMedicare != null">
                and is_medicare = #{isMedicare}
            </if>
            <if test="registryTime != null">
                and registry_time = #{registryTime}
            </if>
            <if test="consultationTime != null">
                and consultation_time = #{consultationTime}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
        </where>
    </select>

    <select id="registryList" resultType="cn.bdqn.dto.RegistryDto">
        SELECT
        t1.id,
        t2.name AS patientName,
        t2.sex AS patientSex,
        t2.id_card AS patientIdCard,
        t3.name AS departmentName,
        t4.user_name AS doctorName,
        t1.registry_time AS registryTime,
        t1.created_time AS createdTime,
        t1.status
        FROM
        registry AS t1
        LEFT JOIN patient AS t2 ON t1.patient_id = t2.id
        LEFT JOIN department AS t3 ON t1.department_id = t3.id
        LEFT JOIN sys_users AS t4 ON t1.user_id = t4.id
        <trim prefix="where" prefixOverrides="and | or">
            <if test="userId != null and userId != 0">
                and t1.user_id=#{userId}
            </if>
            <if test="departmentId != null and departmentId != 0">
                and t1.department_id=#{departmentId}
            </if>
            <if test="status != null and status!=''">
                and t1.status=#{status}
            </if>
            <if test="idCard != null and idCard!=''">
                and t2.id_card like CONCAT('%',#{idCard},'%')
            </if>
        </trim>
        ORDER BY
        t1.registry_time DESC
        <if test="offset != null and pageSize != null ">
            limit #{offset},#{pageSize}
        </if>
    </select>

    <select id="registryListCount" resultType="java.lang.Integer">
        SELECT
        count(t1.id)
        FROM
        registry AS t1
        LEFT JOIN patient AS t2 ON t1.patient_id = t2.id
        LEFT JOIN department AS t3 ON t1.department_id = t3.id
        LEFT JOIN sys_users AS t4 ON t1.user_id = t4.id
        <trim prefix="where" prefixOverrides="and | or">
            <if test="userId != null and userId != 0">
                and t1.user_id=#{userId}
            </if>
            <if test="departmentId != null and departmentId != 0">
                and t1.department_id=#{departmentId}
            </if>
            <if test="status != null and status!=''">
                and t1.status=#{status}
            </if>
            <if test="idCard != null and idCard!=''">
                and t2.id_card like CONCAT('%',#{idCard},'%')
            </if>
        </trim>
    </select>

    <select id="queryAllregisterList" resultType="cn.bdqn.dto.RegistryDto">
        SELECT
        t1.id,
        t2.name AS patientName,
        t2.sex AS patientSex,
        t2.id_card AS patientIdCard,
        t3.name AS departmentName,
        t4.user_name AS doctorName,
        t1.registry_time AS registryTime,
        t1.created_time AS createdTime,
        t1.status
        FROM
        registry AS t1
        LEFT JOIN patient AS t2 ON t1.patient_id = t2.id
        LEFT JOIN department AS t3 ON t1.department_id = t3.id
        LEFT JOIN sys_users AS t4 ON t1.user_id = t4.id
        <trim prefix="where" prefixOverrides="and | or">
            <if test="userId != null and userId != 0">
                and t1.user_id=#{userId}
            </if>
            <if test="departmentId != null and departmentId != 0">
                and t1.department_id=#{departmentId}
            </if>
            <if test="status != null and status!=''">
                and t1.status=#{status}
            </if>
            <if test="idCard != null and idCard!=''">
                and t2.id_card like CONCAT('%',#{idCard},'%')
            </if>
        </trim>
        ORDER BY
        t1.registry_time DESC
    </select>

    <select id="getById" resultType="cn.bdqn.req.RegistryReq">
        SELECT
        t2.name AS patientName,
        t2.id_card AS patientIdCard,
        t2.sex AS patientSex,
        t2.birthday AS patientBirthday,
        t2.address AS patientAddress,
        t1.id,
        t3.name AS departmentName,
        t4.name AS roomName,
        t5.user_name AS doctorName,
        t1.consultation_time AS consultationTime,
        t1.registry_time AS registryTime
        FROM
        registry AS t1
        LEFT JOIN patient AS t2 ON t1.patient_id = t2.id
        LEFT JOIN department AS t3 ON t1.department_id = t3.id
        LEFT JOIN room AS t4 ON t1.room_id = t4.id
        LEFT JOIN sys_users AS t5 ON t1.user_id = t5.id
        <if test="id != null">
            where t1.id=#{id}
        </if>
        limit 1
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into chunteng.registry(patient_id, schedule_id, user_id, department_id, room_id, status, fee, pay_fee, medicare_fee, is_medicare, registry_time, consultation_time, created_time, updated_time)
        values (#{patientId}, #{scheduleId}, #{userId}, #{departmentId}, #{roomId}, #{status}, #{fee}, #{payFee}, #{medicareFee}, #{isMedicare}, #{registryTime}, #{consultationTime}, #{createdTime}, #{updatedTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into chunteng.registry(patient_id, schedule_id, user_id, department_id, room_id, status, fee, pay_fee,
        medicare_fee, is_medicare, registry_time, consultation_time, created_time, updated_time)
        values
        <foreach collection="entities" item="model" separator=",">
            (#{model.patientId}, #{model.scheduleId}, #{model.userId}, #{model.departmentId}, #{model.roomId},
            #{model.status}, #{model.fee}, #{model.payFee}, #{model.medicareFee}, #{model.isMedicare},
            #{model.registryTime}, #{model.consultationTime}, #{model.createdTime}, #{model.updatedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into chunteng.registry(patient_id, schedule_id, user_id, department_id, room_id, status, fee, pay_fee,
        medicare_fee, is_medicare, registry_time, consultation_time, created_time, updated_time)
        values
        <foreach collection="entities" item="model" separator=",">
            (#{model.patientId}, #{model.scheduleId}, #{model.userId}, #{model.departmentId}, #{model.roomId},
            #{model.status}, #{model.fee}, #{model.payFee}, #{model.medicareFee}, #{model.isMedicare},
            #{model.registryTime}, #{model.consultationTime}, #{model.createdTime}, #{model.updatedTime})
        </foreach>
        on duplicate key update
        patient_id = values(patient_id) , schedule_id = values(schedule_id) , user_id = values(user_id) , department_id
        = values(department_id) , room_id = values(room_id) , status = values(status) , fee = values(fee) , pay_fee =
        values(pay_fee) , medicare_fee = values(medicare_fee) , is_medicare = values(is_medicare) , registry_time =
        values(registry_time) , consultation_time = values(consultation_time) , created_time = values(created_time) ,
        updated_time = values(updated_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update chunteng.registry
        <set>
            <if test="patientId != null">
                patient_id = #{patientId},
            </if>
            <if test="scheduleId != null">
                schedule_id = #{scheduleId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="roomId != null">
                room_id = #{roomId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="fee != null">
                fee = #{fee},
            </if>
            <if test="payFee != null">
                pay_fee = #{payFee},
            </if>
            <if test="medicareFee != null">
                medicare_fee = #{medicareFee},
            </if>
            <if test="isMedicare != null">
                is_medicare = #{isMedicare},
            </if>
            <if test="registryTime != null">
                registry_time = #{registryTime},
            </if>
            <if test="consultationTime != null">
                consultation_time = #{consultationTime},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from chunteng.registry where id = #{id}
    </delete>

</mapper>

